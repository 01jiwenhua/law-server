<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shx.law.mapper.LawMapper">
  <resultMap id="BaseResultMap" type="com.shx.law.entity.Law">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="law_name" jdbcType="VARCHAR" property="lawName" />
    <result column="issue_no" jdbcType="VARCHAR" property="issueNo" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="publish_org" jdbcType="VARCHAR" property="publishOrg" />
    <result column="levle_code" jdbcType="VARCHAR" property="levleCode" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="abate_time" jdbcType="TIMESTAMP" property="abateTime" />
    <result column="file_from" jdbcType="VARCHAR" property="fileFrom" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.shx.law.entity.Law">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, law_name, issue_no, type_code, publish_org, levle_code, file_path, create_time, 
    update_time, description, status, publish_time, effective_time, abate_time, file_from
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.shx.law.entity.LawExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_law
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.shx.law.entity.LawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_law
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_law
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_law
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shx.law.entity.LawExample">
    delete from t_law
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shx.law.entity.Law">
    insert into t_law (id, law_name, issue_no, 
      type_code, publish_org, levle_code, 
      file_path, create_time, update_time, 
      description, status, publish_time, 
      effective_time, abate_time, file_from, 
      content)
    values (#{id,jdbcType=INTEGER}, #{lawName,jdbcType=VARCHAR}, #{issueNo,jdbcType=VARCHAR}, 
      #{typeCode,jdbcType=VARCHAR}, #{publishOrg,jdbcType=VARCHAR}, #{levleCode,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{effectiveTime,jdbcType=TIMESTAMP}, #{abateTime,jdbcType=TIMESTAMP}, #{fileFrom,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shx.law.entity.Law">
    insert into t_law
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lawName != null">
        law_name,
      </if>
      <if test="issueNo != null">
        issue_no,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="publishOrg != null">
        publish_org,
      </if>
      <if test="levleCode != null">
        levle_code,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="abateTime != null">
        abate_time,
      </if>
      <if test="fileFrom != null">
        file_from,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lawName != null">
        #{lawName,jdbcType=VARCHAR},
      </if>
      <if test="issueNo != null">
        #{issueNo,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="publishOrg != null">
        #{publishOrg,jdbcType=VARCHAR},
      </if>
      <if test="levleCode != null">
        #{levleCode,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="abateTime != null">
        #{abateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileFrom != null">
        #{fileFrom,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shx.law.entity.LawExample" resultType="java.lang.Long">
    select count(*) from t_law
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_law
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lawName != null">
        law_name = #{record.lawName,jdbcType=VARCHAR},
      </if>
      <if test="record.issueNo != null">
        issue_no = #{record.issueNo,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.publishOrg != null">
        publish_org = #{record.publishOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.levleCode != null">
        levle_code = #{record.levleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effectiveTime != null">
        effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.abateTime != null">
        abate_time = #{record.abateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileFrom != null">
        file_from = #{record.fileFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_law
    set id = #{record.id,jdbcType=INTEGER},
      law_name = #{record.lawName,jdbcType=VARCHAR},
      issue_no = #{record.issueNo,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      publish_org = #{record.publishOrg,jdbcType=VARCHAR},
      levle_code = #{record.levleCode,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      abate_time = #{record.abateTime,jdbcType=TIMESTAMP},
      file_from = #{record.fileFrom,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_law
    set id = #{record.id,jdbcType=INTEGER},
      law_name = #{record.lawName,jdbcType=VARCHAR},
      issue_no = #{record.issueNo,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      publish_org = #{record.publishOrg,jdbcType=VARCHAR},
      levle_code = #{record.levleCode,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      abate_time = #{record.abateTime,jdbcType=TIMESTAMP},
      file_from = #{record.fileFrom,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shx.law.entity.Law">
    update t_law
    <set>
      <if test="lawName != null">
        law_name = #{lawName,jdbcType=VARCHAR},
      </if>
      <if test="issueNo != null">
        issue_no = #{issueNo,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="publishOrg != null">
        publish_org = #{publishOrg,jdbcType=VARCHAR},
      </if>
      <if test="levleCode != null">
        levle_code = #{levleCode,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="abateTime != null">
        abate_time = #{abateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileFrom != null">
        file_from = #{fileFrom,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shx.law.entity.Law">
    update t_law
    set law_name = #{lawName,jdbcType=VARCHAR},
      issue_no = #{issueNo,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      publish_org = #{publishOrg,jdbcType=VARCHAR},
      levle_code = #{levleCode,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      abate_time = #{abateTime,jdbcType=TIMESTAMP},
      file_from = #{fileFrom,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shx.law.entity.Law">
    update t_law
    set law_name = #{lawName,jdbcType=VARCHAR},
      issue_no = #{issueNo,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      publish_org = #{publishOrg,jdbcType=VARCHAR},
      levle_code = #{levleCode,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      abate_time = #{abateTime,jdbcType=TIMESTAMP},
      file_from = #{fileFrom,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByParams" resultType="java.util.Map">
    select
    l.id,
    l.law_name lawName,
    l.issue_no issueNo,
    l.description,
    l.effective_time effectiveTime,
    l.file_path filePath,
    l.levle_code levleCode,
    l.publish_org publishOrg,
    l.publish_time publishTime,
    l.type_code typeCode,
    l.file_from fileFrom,
    (select 1 from t_favorite where user_id = #{lawRequest.userId} and law_id = l.id and status=1) is_favorite
    from t_law l
    <where>
      <if test="lawRequest.typeCode != null">
        l.type_code = #{lawRequest.typeCode}
      </if>
      <if test="lawRequest.level != null">
        and l.levle_code= #{lawRequest.level}
      </if>
      <if test="lawRequest.name != null">
        AND (l.law_name LIKE concat(concat('%',#{lawRequest.name}),'%')
        OR l.description LIKE concat(concat('%',#{lawRequest.name}),'%')
        OR l.issue_no LIKE concat(concat('%',#{lawRequest.name}),'%'))
      </if>
    </where>

  </select>

  <select id="selectNewLaw" resultType="java.util.Map">
    select
    l.id,
    l.law_name lawName,
    l.issue_no issueNo,
    l.description,
    l.effective_time effectiveTime,
    l.file_path filePath,
    l.levle_code levleCode,
    l.publish_org publishOrg,
    l.publish_time publishTime,
    l.type_code typeCode,
    l.file_from fileFrom,
    (select 1 from t_favorite where user_id = #{userId} and law_id = l.id and status=1) is_favorite
    from t_law l
    ORDER BY publish_time desc
    LIMIT 5
  </select>
</mapper>